#!@PERL_EXECUTABLE@ -W

use feature qw/switch/;
use File::Spec::Functions;
use File::Basename;
use Env qw(@LD_LIBRARY_PATH);

use constant true => 1;
use constant false => 0;

use Getopt::Long qw(:config no_ignore_case);

BEGIN {
  unshift @INC, catfile("@CMAKE_SOURCE_DIR@", 'PerlModules'); 
}

use Gdb;
use App;

my ($package, $exe, $world, $debugApplication, $debugInitFile, $debugBuild, $gitBranch);
my $init_dir="@MODULE_INIT_DIR@";
my @args;

$debugBuild = @CMAKE_IS_DEBUG_BUILD@;

my $result = GetOptions (
  'module|m=s' => \$package,
  'debug|d' => \$debugApplication,
  'init|i' => \$debugInitFile,
  'branch|b=s' => \$gitBranch,
  'all' => \$world,
);

if (!$gitBranch) {
  $gitBranch='@GIT_CURRENT_BRANCH_NAME@';
}

given ($package) {
  when ('tag-rename') {
    if ($debugBuild) {
      $exe = "@INSTALL_PREFIX_Debug@/$gitBranch/bin/tag-rename";
    } else {
      $exe = "@INSTALL_PREFIX_Release@/bin/tag-rename";
    }
  }
}

my %appArgs;

if ($debugBuild) {
  my $prefsFile = catfile ("@CMAKE_SOURCE_DIR@", 'Share', 'Data', 'Preferences.css');
  my $confFile = catfile ("@CMAKE_SOURCE_DIR@", 'Share', 'Data', 'Mp3Config.xml');
  $appArgs{'style-sheet'} = $prefsFile if -e $prefsFile; 
  $appArgs{'conf-file'} = $confFile if -e $confFile; 
  $appArgs{'data-dir'} = "@CMAKE_SOURCE_DIR@/Share/Data";
}

if ($init_dir) {
  $appArgs{'init-dir'} = sprintf('\"%s\"', $init_dir);
}

if ($debugBuild) {
  unshift @LD_LIBRARY_PATH, dirname ("@ZORBA_DEBUG_LIBRARY@");
  unshift @LD_LIBRARY_PATH, dirname ("@QT_QTCORE_LIBRARY@");
  unshift @LD_LIBRARY_PATH, dirname ("@TAGLIB_DEBUG_LIBRARY@");
} else {
  unshift @LD_LIBRARY_PATH, dirname ("@TAGLIB_OPTIMIZED_LIBRARY@");
  unshift @LD_LIBRARY_PATH, dirname ("@QT_QTCORE_LIBRARY@");
  unshift @LD_LIBRARY_PATH, dirname ("@ZORBA_OPTIMIZED_LIBRARY@");
}

unshift @LD_LIBRARY_PATH, "@Boost_LIBRARY_DIRS@";

if ($debugApplication) {
  my $init_file;

  if ($debugInitFile) {
    $init_file = $debugInitFile;
  } else {
    $init_file = catfile ("@CMAKE_BINARY_DIR@", 'init.gdb');
  }

  my $gdb = Gdb->new(
      exe_file => $exe,
      init_file => $init_file
      );
  $gdb->launch(%appArgs);
} else {
  my $app = App->new (
      exe_file => $exe
      );
  $app->launch(%appArgs);
}
